# Generated by Django 4.2.16 on 2024-11-24 20:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0003_alter_property_city_alter_property_state_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='property',
            options={'ordering': ['city', 'state'], 'verbose_name': 'Property', 'verbose_name_plural': 'Properties'},
        ),
        migrations.AddField(
            model_name='tenant',
            name='phone_number',
            field=models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='rentpayment',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rent_payments', to='app.property'),
        ),
        migrations.AlterField(
            model_name='rentpayment',
            name='status',
            field=models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Late', 'Late')], default='Pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='rentpayment',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rent_payments', to='app.tenant'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='rent_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(db_index=True, max_length=254, unique=True),
        ),
        migrations.AddConstraint(
            model_name='tenantapprovalrequest',
            constraint=models.CheckConstraint(check=models.Q(('tenant__current_property', models.F('property'))), name='tenant_property_belongs_to_landlord'),
        ),
    ]
